<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on World Hacks</title>
    <link>http://jice.lavocat.name/blog/tags/python/</link>
    <description>Recent content in Python on World Hacks</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>fr-FR</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Wed, 17 Nov 2010 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://jice.lavocat.name/blog/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A script to plot GWL File (for the use of Nanoscribe)</title>
      <link>http://jice.lavocat.name/blog/2010/11/a-script-to-plot-gwl-file-for-the-use-of-nanoscribe/</link>
      <pubDate>Wed, 17 Nov 2010 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2010/11/a-script-to-plot-gwl-file-for-the-use-of-nanoscribe/</guid>
      <description>&lt;p&gt;![][1]&lt;figure class=&#34;alignleft size-full wp-image-1121&#34;&gt;

    &lt;img src=&#34;http://jice.lavocat.name/blog//images/posts/oldwordpress/uploads/2010/11/describe1.png&#34; alt=&#34;describe - nanoscribe language GWL&#34; width=&#34;106&#34; /&gt;
    

&lt;figcaption&gt;
	&amp;lt;invalid Value&amp;gt;
    &lt;h4&gt;describe - nanoscribe language GWL&lt;/h4&gt;
    
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Grover’s Search Algorithm in Python</title>
      <link>http://jice.lavocat.name/blog/2009/08/grovers-search-algorithm-in-python/</link>
      <pubDate>Sat, 15 Aug 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2009/08/grovers-search-algorithm-in-python/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  As you may have read in some previous post I am actually working on a modified version of the &lt;a title=&#34;Lee Grover&#34; href=&#34;http://www1.bell-labs.com/user/lkgrover/&#34; target=&#34;_blank&#34;&gt;Grover&lt;/a&gt;&amp;#8216;s &lt;a title=&#34;Grover&#39;s Search Algorithm&#34; href=&#34;http://arxiv.org/abs/quant-ph/9605043&#34; target=&#34;_blank&#34;&gt;Algorithm&lt;/a&gt;. For those who don&amp;#8217;t know the &lt;a title=&#34;Explanations of Grover&#39;s Algorithm&#34; href=&#34;http://www.quantiki.org/wiki/index.php/Grover%27s_search_algorithm&#34; target=&#34;_blank&#34;&gt;principles of Grover&amp;#8217;s Algorithm&lt;/a&gt;, here is a quick explanation.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  We have a function $$f : \mathbb{Z}_2^n\rightarrow \mathbb{Z}_2$$ that is True for only one $$a \in \mathbb{Z}_2^n$$. We also have a quantum oracle that returns the value of the function f. Classicaly, finding the value of $$a$$ will take n-1 steps. With the quantum version (Grover&amp;#8217;s Algorithm) it takes only $$\sqrt{n}$$ steps.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  The idea (without explanations) is to take an equally distributed weights vector as input $$x$$, and to iterate a sequence of unitary operations during a certain amount of time.  After this given number of steps a measurement on the input vector is made, and is has been proved that we will observed the correct answer with probability 1. The number of steps is proportional to $$\sqrt{n}$$.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  Bellow I put the picture representing the evolution (step after step) of the probability to observe the correct answer. You can see the oscillations that are well explained by geometrical description of this algorithm.
&lt;/p&gt;

&lt;p&gt;&lt;h2 style=&#34;text-align: center;&#34;&gt;
  &lt;a href=&#34;images/posts/oldwordpress/uploads/2009/08/grover_simple.png&#34;&gt;&lt;figure class=&#34;aligncenter size-thumbnail wp-image-801&#34;&gt;

    &lt;img src=&#34;http://jice.lavocat.name/blog//images/posts/oldwordpress/uploads/2009/08/grover_simple-150x150.png&#34; alt=&#34;grover_simple&#34; width=&#34;150&#34; /&gt;
    

&lt;figcaption&gt;
	&amp;lt;invalid Value&amp;gt;
    &lt;h4&gt;grover_simple&lt;/h4&gt;
    
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Python et Google PageRank</title>
      <link>http://jice.lavocat.name/blog/2009/07/python-et-google-pagerank/</link>
      <pubDate>Thu, 02 Jul 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2009/07/python-et-google-pagerank/</guid>
      <description>&lt;p&gt;&lt;p style=&#34;text-align: justify;&#34;&gt;
  &lt;figure class=&#34;alignleft size-full wp-image-422&#34;&gt;

    &lt;img src=&#34;http://jice.lavocat.name/blog//images/posts/oldwordpress/uploads/2009/06/python.png&#34; alt=&#34;python&#34; width=&#34;75&#34; /&gt;
    

&lt;figcaption&gt;
	&amp;lt;invalid Value&amp;gt;
    &lt;h4&gt;python&lt;/h4&gt;
    
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Numpy error – ValueError: setting an array element with sequence</title>
      <link>http://jice.lavocat.name/blog/2009/06/numpy-error-valueerror-setting-an-array-element-with-sequence/</link>
      <pubDate>Thu, 04 Jun 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2009/06/numpy-error-valueerror-setting-an-array-element-with-sequence/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  You have struggled during hours and hours to understand why you got this damned error while compiling a complex array structure? I did. In my case I was trying to create an array of the following shape :
&lt;/p&gt;

&lt;p style=&#34;text-align: center;&#34;&gt;
  [  [ [0,0,1,0] , 0.5] , [ [0,1,1,0] , 0.3] , [ [1,0,1,0] , 0.2] ]
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  With the basic syntax, it was impossible. I first didn&amp;#8217;t notice the problem because I wasn&amp;#8217;t using the &amp;#8216;&lt;em&gt;array&lt;/em&gt;&amp;#8216; constructor, but when I tried to &lt;strong&gt;append &lt;/strong&gt;some value to my initial vector, I got the error : &lt;strong&gt;ValueError: setting an array element with sequence&lt;/strong&gt;.
&lt;/p&gt;

&lt;p style=&#34;text-align: left;&#34;&gt;
  Even the simple construction : &lt;em&gt;array([( [0,0,1,0],0.5)]) &lt;/em&gt;would give the error.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  the problem is that &lt;strong&gt;numpy &lt;/strong&gt;is made to calculate vectors and arrays. It doesn&amp;#8217;t like the fact you give it table with different sizes. Ok, then you can try to change the second value 0.5 to [0.5,0,0,0]. It would work&amp;#8230;. but it&amp;#8217;s not really clean. Your code will look messy.
&lt;/p&gt;

&lt;p&gt;&lt;p style=&#34;text-align: justify;&#34;&gt;
  &lt;p style=&#34;text-align: justify;&#34;&gt;
    Instead, here is the solution I found after 4 hours looking everywhere on the web&amp;#8230; finding nothing. This is my own solution, so if helped you, I would be very glad &lt;figure class=&#34;wp-smiley&#34;&gt;

    &lt;img src=&#34;http://jice.lavocat.name/blog//http://localhost/oldblog/wp-includes/images/smilies/icon_biggrin.gif&#34; alt=&#34;:-D&#34; /&gt;
    

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>La panoplie du petit chercheur</title>
      <link>http://jice.lavocat.name/blog/2009/04/la-panoplie-du-petit-chercheur/</link>
      <pubDate>Wed, 15 Apr 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2009/04/la-panoplie-du-petit-chercheur/</guid>
      <description>&lt;p&gt;A tout ceux qui veulent se lancer dans des sujets scientifiques ou l&amp;#8217;on demandera de coder des choses nouvelles, je conseille le logiciel Python(x,y) qui integre en son sein toutes les bibliotheques python que vous pourrez surement demander un jour.&lt;/p&gt;

&lt;p&gt;A telecharger ici : &lt;a title=&#34;Python(xy)&#34; href=&#34;http://www.pythonxy.com&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://www.pythonxy.com&#34;&gt;http://www.pythonxy.com&lt;/a&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Script de spam referer automatisé python</title>
      <link>http://jice.lavocat.name/blog/2009/02/script-de-spam-referer-automatise-python/</link>
      <pubDate>Sun, 15 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2009/02/script-de-spam-referer-automatise-python/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  Script de Spam Referer automatisé en Python
&lt;/p&gt;

&lt;p&gt;&lt;p style=&#34;text-align: justify;&#34;&gt;
  &lt;figure class=&#34;alignleft size-full wp-image-119&#34;&gt;

    &lt;img src=&#34;http://jice.lavocat.name/blog//images/posts/oldwordpress/uploads/2009/02/seo_black_hat.jpg&#34; alt=&#34;Spammeur SEO&#34; width=&#34;140&#34; /&gt;
    

&lt;figcaption&gt;
	&amp;lt;invalid Value&amp;gt;
    &lt;h4&gt;Spammeur SEO&lt;/h4&gt;
    
&lt;/figcaption&gt;

&lt;/figure&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Extraire les URLs des résultats Google en python</title>
      <link>http://jice.lavocat.name/blog/2009/02/extraire-urls-des-resultats-google-en-python/</link>
      <pubDate>Wed, 04 Feb 2009 00:00:00 +0000</pubDate>
      
      <guid>http://jice.lavocat.name/blog/2009/02/extraire-urls-des-resultats-google-en-python/</guid>
      <description>&lt;p style=&#34;text-align: justify;&#34;&gt;
  J&amp;#8217;ai passé une bonne partie de l&amp;#8217;après-midi à me former à Python. Comme exercice je voulais adapter le script de Tiger sur l&amp;#8217;&lt;a title=&#34;Extraction de résultats google en php&#34; href=&#34;http://www.seoblackout.com/2008/10/26/extraire-resultats-google/&#34; target=&#34;_blank&#34;&gt;extraction de résultats sur google&lt;/a&gt;, en traduisant le php en python.
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
  J&amp;#8217;ai eu quelques soucis à cause d&amp;#8217;erreurs d&amp;#8217;innatention et de bêtises de codage, mais au final j&amp;#8217;ai réussi. Le code suivant (Python 3.0) vous donne le même résultat (sans la mise en forme) que le script de Tiger.Le code obtenu est le suivant :
&lt;/p&gt;

&lt;p style=&#34;text-align: justify;&#34;&gt;
   
&lt;/p&gt;

&lt;pre&gt;&lt;code lang=&#34;python&#34;&gt;
import urllib.request
import re

user_agent = &#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&#39;
headers = { &#39;User-Agent&#39; : user_agent }

ext=&#34;fr&#34;
lang=&#34;fr&#34; #sur quelle datacenter chercher?&#34;

nb_page=5 #Nombre de pages de résultat
keyword=&#39;&#34;Dynamic+Friends&#34;+ring+google.com&#39; #Mot clé cherché

pagenum = 0 #on commence à la page 1
googlefrurl = &#34;http://www.google.&#34;+ext+&#34;/custom?hl=&#34;+lang+&#34;&amp;#038;q=&#34; + keyword + &#34;&amp;#038;start=&#34;+str(pagenum)

f = open(&#34;liste_url_collectees.txt&#34;, &#34;w&#34;)
while pagenum &amp;lt;= nb_page:
    rep = urllib.request.Request(googlefrurl,None,headers)
    response = urllib.request.urlopen(rep)
    result = str(response.read())
    sep=&#39;
&amp;lt;h2 class=r&gt;&amp;lt;a href=.*?&gt;&#39;
    matches=re.findall(sep,result)
    res_tab=[]
    for elt in matches:
        sep=&#39;http.*?&#34;&#39;
        match=re.findall(sep,elt)
        res_tab.append(match[0][:-1])

    for elt in res_tab:
        print(elt)
        f.write(elt+&#34;n&#34;)

    pagenum = int(pagenum)+1 #on passe à la page suivante
    pagenum2 = str(pagenum)+&#39;0&#39;#on met en forme pour google qui va de 10 en 10
    googlefrurl = &#34;http://www.google.&#34;+ext+&#34;/custom?hl=&#34;+lang+&#34;&amp;#038;q=&#34; + keyword + &#34;&amp;#038;start=&#34;+pagenum2+&#34;&amp;#038;safe=off&amp;#038;pwst=1&amp;#038;filter=0&#34;

f.close()
&lt;/code&gt;
&lt;/pre&gt;

&lt;p align=&#34;justify&#34;&gt;
  Au final on obtient un fichier &lt;em&gt;liste_url_collectees.txt&lt;/em&gt; qui va nous servir à plein de chose&amp;#8230;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>