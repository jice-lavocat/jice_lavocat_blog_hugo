<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Jice is Nice</title>
    <link>http://localhost:1313/tags/bash/</link>
    <description>Recent content in Bash on Jice is Nice</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Sun, 23 Mar 2008 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Modifier de façon récursive les droits des dossiers [Script Bash]</title>
      <link>http://localhost:1313/2008/03/modifier-de-facon-recursive-les-droits-des-dossiers-script-bash/</link>
      <pubDate>Sun, 23 Mar 2008 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2008/03/modifier-de-facon-recursive-les-droits-des-dossiers-script-bash/</guid>
      <description>

&lt;p&gt;Vous êtes étudiants à l&amp;#8217;Ecole Centrale Marseille? Vous êtes sur un réseau où les administrateurs se font du soucis pour la sécurité? Il y a fort à parier que la publication d&amp;#8217;un site web présente quelques difficultés pour le néophyte.&lt;/p&gt;

&lt;p&gt;En effet, le serveur qui affichera vos pages web (apache?) se basera sur les droits que vous accordez à vos fichiers. Si ceux-ci sont mal réglés, vous n&amp;#8217;aurez pas le droit d&amp;#8217;y accéder par le web.&lt;/p&gt;

&lt;p&gt;Voilà le code source d&amp;#8217;un script bash pour faire les changements automatiquement sur votre fichier web :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;_#!/bin/bash&lt;/p&gt;

&lt;p&gt;find . -type f -exec chmod 644 {} \; #fichiers en général&lt;/p&gt;

&lt;p&gt;find . -name &amp;#8216;*.php&amp;#8217; -exec chmod 600 {} \; #tous les fichiers qui portent l&amp;#8217;extension php&lt;/p&gt;

&lt;p&gt;find . -type d -exec chmod 751 {} \; #tous les répertoires&lt;/p&gt;

&lt;p&gt;chmod 755 visible #un répertoire visible de l&amp;#8217;extérieur qui s&amp;#8217;appelle &amp;#8216;visible&amp;#8217;&lt;/p&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p&gt;__&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;utilisation:409e210cf15dfebb4b559ac85c8a223b&#34;&gt;Utilisation :&lt;/h3&gt;

&lt;p&gt;Créer un fichier vierge : &amp;#8216;touch nom_script.sh&amp;#8217;, dans lequel vous allez copier le texte ci-dessus. Pour l&amp;#8217;exécuter, donner lui les droits nécessaire (&amp;#8216;chmod 700&amp;#8242; devrait suffire).&lt;/p&gt;

&lt;p&gt;Lancez le ensuite grâce à &amp;#8216; ./nom_script.sh&amp;#8217;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Modifier rapidement un ensemble de fichiers sous linux [BASH]</title>
      <link>http://localhost:1313/2008/01/modifier-rapidement-un-ensemble-de-fichiers-sous-linux-bash/</link>
      <pubDate>Tue, 01 Jan 2008 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/2008/01/modifier-rapidement-un-ensemble-de-fichiers-sous-linux-bash/</guid>
      <description>

&lt;p&gt;Vous vous trouvez sous Linux, vous désirez changer une chaîne de caractère avec une faute d&amp;#8217;orthographe dans l&amp;#8217;ensemble des fichiers d&amp;#8217;un dossier? Utilisez le script suivant :&lt;/p&gt;

&lt;h3 id=&#34;en-bref:160a4624532c793c3f180f215e2d6b50&#34;&gt;En Bref :&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;#!/bin/bash&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;for file in *.php&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;do&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;echo &amp;#8220;Traitement de $file &amp;#8230;&amp;#8221;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;sed -e &amp;#8220;s/eMssage avec erreur/Message sans erreur/g&amp;#8221; &amp;#8220;$file&amp;#8221; &amp;gt; &amp;#8220;$file&amp;#8221;.tmp &amp;amp;&amp;amp; mv -f &amp;#8220;$file&amp;#8221;.tmp &amp;#8220;$file&amp;#8221;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;done&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Pour cela, ouvrir une console :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;cd /chemin/dossier&lt;/em&gt; (placez vous dans le dossier concerné)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;touch monscript.sh&lt;/em&gt; (créer un fichier vide nommé monscript)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;éditez le fichier et collez le script ci-dessus en faisant les changement nécessaire&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;./monscript.sh&lt;/em&gt; (executer lescript en local)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Le principe&lt;/strong&gt; :&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;for file in *.php &amp;lt;- Tous les fichiers du répertoire qui finissent par l&amp;#8217;extension .php&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;_ _echo &amp;#8220;Traitement de $file &amp;#8230;&amp;#8221; &amp;lt;- On indique leur nom__&lt;/p&gt;

&lt;p&gt;_ _sed -e &amp;#8220;s/eMssage avec erreur/Message sans erreur/g&amp;#8221; &amp;#8220;$file&amp;#8221; &amp;gt; &amp;#8220;$file&amp;#8221;.tmp &amp;amp;&amp;amp; mv -f &amp;#8220;$file&amp;#8221;.tmp &amp;#8220;$file&amp;#8221;__&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;em&gt;&lt;em&gt;&lt;- On substitue (s) le premier message par le deuxième message, à toutes les lignes (g). On applique cela à tous les fichiers que l&amp;#8217;on traite actuellement, et onrenomme les fichiers temporaires créés pour l&amp;#8217;occasion&lt;br /&gt; &lt;/em&gt;&lt;/em&gt;
&lt;/p&gt;

&lt;p&gt;Plus d&amp;#8217;info sur : &lt;a title=&#34;SED&#34; href=&#34;http://fr.wikipedia.org/wiki/Sed_(logiciel)&#34; target=&#34;_blank&#34;&gt;&lt;a href=&#34;http://fr.wikipedia.org/wiki/Sed_(logiciel&#34;&gt;http://fr.wikipedia.org/wiki/Sed_(logiciel&lt;/a&gt;)&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;remplacer-un-texte-dans-des-fichiers-méthode-évoluée:160a4624532c793c3f180f215e2d6b50&#34;&gt;Remplacer un texte dans des fichiers : Méthode évoluée&lt;/h3&gt;

&lt;p align=&#34;justify&#34;&gt;
  A présent je veux remplacer dans l&amp;#8217;ensemble de mes fichiers .php la chaine &amp;#8220;&lt;?&amp;#8221; par la chaîne &amp;#8220;&lt;?php&amp;#8221;. Evidemment, je ne veux pas remplacer les bonnes chaînes déjà existantes, sinon j&amp;#8217;aurai : &amp;#8220;&lt;?&lt;?php&amp;#8221; ce qui ne sera pas bon.
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  Première méthode, je le fais à la bourrin, je remplace tous les &amp;#8220;&lt;?&amp;#8221; puis je remplace les &amp;#8220;&lt;?&lt;?&amp;#8221; par &amp;#8220;&lt;?&amp;#8221;.
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  Deuxième méthode, je suis plus doux, et je vais : chercher les fichiers .php à modifer, effectuer la modification ciblée.
&lt;/p&gt;

&lt;p&gt;Pour trouver les fichiers à modifier :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;_find /rep -name &amp;#8220;*.php&amp;#8221; | xargs grep &amp;#8220;&amp;lt;?[^php]&amp;#8221;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;_&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  &lt;strong&gt;Le principe&lt;/strong&gt;: le find permet de trouver les fichiers ayant l&amp;#8217;extension .php. Le grep permet de trouver dans un fichier une expression donnée (ici &amp;#8220;&lt;?&amp;#8221; privée de &amp;#8220;php&amp;#8221; à sa suite, voir expressions rationnelles). Le xargs permet de lire les fichiers envoyé par le pipe de find.
&lt;/p&gt;

&lt;p align=&#34;justify&#34;&gt;
  Si on a peur d&amp;#8217;obtenir beaucoup de résultats on peux demander uniquement l&amp;#8217;affichage du nom des fichiers en question :
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;find /rep -name &amp;#8220;*.php&amp;#8221; | xargs grep -l &amp;#8220;&amp;lt;?[^php]&amp;#8221;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;p&gt;&amp;#8230; ou bien plus de précision en demandant l&amp;#8217;affichage de la ligne :&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;find /rep -name &amp;#8220;*.php&amp;#8221; | xargs grep -n &amp;#8220;&amp;lt;?[^php]&amp;#8221;&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Script à utiliser pour la modification :&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;_#!/bin/sh&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;old_value=&amp;#8221;&amp;lt;?&amp;#8221;;&lt;/p&gt;

&lt;p&gt;new_value=&amp;#8221;&amp;lt;?php&amp;#8221;;&lt;/p&gt;

&lt;p&gt;ignore_value=&amp;#8221;&amp;lt;?php&amp;#8221;;&lt;/p&gt;

&lt;p&gt;SUCCESS=0&lt;/p&gt;

&lt;p&gt;for file in $(find . -name &amp;#8220;*.php&amp;#8221;)&lt;/p&gt;

&lt;p&gt;do&lt;/p&gt;

&lt;p&gt;echo &amp;#8220;Traitment de : $file&amp;#8221;&lt;/p&gt;

&lt;p&gt;grep -q &amp;#8220;$old_value&amp;#8221; &amp;#8220;$file&amp;#8221;&lt;/p&gt;

&lt;p&gt;if [ $? -eq $SUCCESS ]&lt;/p&gt;

&lt;p&gt;# if grep -q &amp;#8220;$word&amp;#8221; &amp;#8220;$filename&amp;#8221; can replace lines 5 &amp;#8211; 7.&lt;/p&gt;

&lt;p&gt;then&lt;/p&gt;

&lt;p&gt;mv $file $file.old2&lt;/p&gt;

&lt;p&gt;sed &amp;#8220;/$ignore_value/!s/$old_value/$new_value/g&amp;#8221; &amp;lt; $file.old2 &amp;gt; $file&lt;/p&gt;

&lt;p&gt;rm $file.old2&lt;/p&gt;

&lt;p&gt;fi&lt;/p&gt;

&lt;p&gt;done&lt;/em&gt;&lt;/blockquote&gt;&lt;/p&gt;

&lt;p&gt;On le place dans /html et on exécute. Pensez à sauver auparavant, sait-on jamais.&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>